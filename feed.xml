<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/talks/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/talks/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/talks/" rel="alternate" type="text/html" /><updated>2017-02-26T21:08:07-05:00</updated><id>http://localhost:4000/talks//</id><title type="html">Talks</title><subtitle>A repository of talks I've given</subtitle><author><name>Jake Zimmerman</name></author><entry><title type="html">Writing at the Command Line</title><link href="http://localhost:4000/talks/writing-at-the-command-line/" rel="alternate" type="text/html" title="Writing at the Command Line" /><published>2016-11-20T00:00:00-05:00</published><updated>2016-11-20T00:00:00-05:00</updated><id>http://localhost:4000/talks/writing-at-the-command-line</id><content type="html" xml:base="http://localhost:4000/talks/writing-at-the-command-line/">&lt;p&gt;One of my favorite quotes is this one by Manuel Blum:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are all computer scientists.&lt;br&gt; You know what FINITE AUTOMATA can do.&lt;br&gt; You know what TURING MACHINES can do.&lt;br&gt; For example, Finite Automata can add but not multiply.&lt;br&gt; Turing Machines can compute any computable function.&lt;br&gt; Turing machines are incredibly more powerful than Finite Automata.&lt;br&gt; Yet the only difference between a FA and a TM is that&lt;br&gt; the TM, unlike the FA, has paper and pencil.&lt;br&gt; Think about it.&lt;br&gt; It tells you something about the power of writing.&lt;br&gt; Without writing, you are reduced to a finite automaton.&lt;br&gt; With writing you have the extraordinary power of a Turing machine.&lt;/p&gt;
&lt;p&gt;Manuel Blum, &lt;em&gt;Advice to a Beginning Graduate Student&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Writing is a critically important skill for various reasons. Once you’ve convinced yourself &lt;em&gt;to write&lt;/em&gt;, the next question becomes &lt;em&gt;how to write&lt;/em&gt;. Writing at the Command Line introduces a handful of workflows, tools, and suggestions for writing in plain text, with a particular emphasis on Markdown.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;../slides/writing-cli.pdf&quot;&gt;Writing at the Command Line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jake Zimmerman</name></author><summary type="html">One of my favorite quotes is this one by Manuel Blum:</summary></entry><entry><title type="html">Crafting Well-Designed Sites</title><link href="http://localhost:4000/talks/crafting-well-designed-sites/" rel="alternate" type="text/html" title="Crafting Well-Designed Sites" /><published>2016-11-06T00:00:00-04:00</published><updated>2016-11-06T00:00:00-04:00</updated><id>http://localhost:4000/talks/crafting-well-designed-sites</id><content type="html" xml:base="http://localhost:4000/talks/crafting-well-designed-sites/">&lt;p&gt;My interests varied wildly over my tenure at CMU. Towards the end of my time there, I became increasingly interested in design, specifically typography and information hierarchy. As such, for the Fall 2016 Web Dev Weekend (see also: &lt;a href=&quot;/talks//frontend-javascript-primer/&quot;&gt;Frontend JavaScript Primer&lt;/a&gt;), I held another workshop-style talk on using typography and information hierarchy titled “Crafting Well-Designed Sites.”&lt;/p&gt;
&lt;p&gt;It was split into two halves: a lecture portion where I introduced actionable rules for improving the design of print and digital text, followed by an interactive “design critique” where the participants sketched their ideas and we discussed what we liked and didn’t like about various designs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;../slides/crafting-well-designed-sites.pdf&quot;&gt;Crafting Well-Designed Sites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jake Zimmerman</name></author><summary type="html">My interests varied wildly over my tenure at CMU. Towards the end of my time there, I became increasingly interested in design, specifically typography and information hierarchy. As such, for the Fall 2016 Web Dev Weekend (see also: Frontend JavaScript Primer), I held another workshop-style talk on using typography and information hierarchy titled “Crafting Well-Designed Sites.”</summary></entry><entry><title type="html">Oneliners</title><link href="http://localhost:4000/talks/oneliners/" rel="alternate" type="text/html" title="Oneliners" /><published>2016-10-26T00:00:00-04:00</published><updated>2016-10-26T00:00:00-04:00</updated><id>http://localhost:4000/talks/oneliners</id><content type="html" xml:base="http://localhost:4000/talks/oneliners/">&lt;p&gt;Learning to write bash oneliners is skill that pays incredible dividends over the course of career in software engineering or computer science. While individual oneliners usually tend to take on a life of their own, a few principles apply to nearly every oneliner.&lt;/p&gt;
&lt;p&gt;I gave this talk at CMU as a part of the course 15-131 Great Practical Ideas for Computer Scientists. Since it was for a lecture, it splits its time beteween reviewing old material and introducing new material. Topics introduced include shell IO redirection, crafting bash oneliners iteratively, and some common tools that compose well in oneliners.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;../slides/oneliners.pdf&quot;&gt;Oneliners&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jake Zimmerman</name></author><summary type="html">Learning to write bash oneliners is skill that pays incredible dividends over the course of career in software engineering or computer science. While individual oneliners usually tend to take on a life of their own, a few principles apply to nearly every oneliner.</summary></entry><entry><title type="html">Tmux &amp;amp; Other Tools</title><link href="http://localhost:4000/talks/tmux-and-other-tools/" rel="alternate" type="text/html" title="Tmux &amp; Other Tools" /><published>2016-10-22T00:00:00-04:00</published><updated>2016-10-22T00:00:00-04:00</updated><id>http://localhost:4000/talks/tmux-and-other-tools</id><content type="html" xml:base="http://localhost:4000/talks/tmux-and-other-tools/">&lt;p&gt;This informal tech talk demos some of my favorite interactive command line programs. I gave it as a part of the course 15-131 Great Practical Ideas for Computer Scientists at CMU.&lt;/p&gt;
&lt;p&gt;In particular, we explore package managers, &lt;code&gt;tmux&lt;/code&gt;, &lt;code&gt;fzf&lt;/code&gt;, and &lt;code&gt;ag&lt;/code&gt;. These programs blew my mind the first time I discovered them, and I enjoy being able to share them with others.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;../slides/tmux-and-other-tools.pdf&quot;&gt;Tmux &amp;amp; Other Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jake Zimmerman</name></author><summary type="html">This informal tech talk demos some of my favorite interactive command line programs. I gave it as a part of the course 15-131 Great Practical Ideas for Computer Scientists at CMU.</summary></entry><entry><title type="html">React.js: A Crash Course</title><link href="http://localhost:4000/talks/react-js/" rel="alternate" type="text/html" title="React.js: A Crash Course" /><published>2016-01-29T00:00:00-05:00</published><updated>2016-01-29T00:00:00-05:00</updated><id>http://localhost:4000/talks/react-js</id><content type="html" xml:base="http://localhost:4000/talks/react-js/">&lt;p&gt;At CMU, I was a part of a student organization called ScottyLabs. Among lots of other things, the thing we were most well-known for was as the group that put on TartanHacks, a collegiate hackathon open to CMU students in early February.&lt;/p&gt;
&lt;p&gt;To provide the best possible experience for participants at TartanHacks, we would run a number of events throughout the year to help them learn skills that are useful at hackathons. In particular, at one called &lt;a href=&quot;https://tartanhacks.com/crashcourse/&quot;&gt;Crash Course&lt;/a&gt; I gave a talk to introduce participants to the essentials of React.js.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;../slides/react.js.pdf&quot;&gt;React.js: A Crash Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jake Zimmerman</name></author><summary type="html">At CMU, I was a part of a student organization called ScottyLabs. Among lots of other things, the thing we were most well-known for was as the group that put on TartanHacks, a collegiate hackathon open to CMU students in early February.</summary></entry><entry><title type="html">Vim as an IDE</title><link href="http://localhost:4000/talks/vim-as-an-ide/" rel="alternate" type="text/html" title="Vim as an IDE" /><published>2015-02-25T00:00:00-05:00</published><updated>2015-02-25T00:00:00-05:00</updated><id>http://localhost:4000/talks/vim-as-an-ide</id><content type="html" xml:base="http://localhost:4000/talks/vim-as-an-ide/">&lt;p&gt;Vim as an IDE is an interactive workshop-style tech talk that I first gave at Carnegie Mellon University as a part of the Computer Club Talk Series. Its central motivation is this: students who have been instructed or told to use Vim to complete programming assignments while ssh’ed are missing out on the vast power that lies within Vim.&lt;/p&gt;
&lt;p&gt;There are two fronts to having an amazing Vim experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;knowing how to manipulate text using Vim’s built in keyboard shortcuts&lt;/li&gt;
&lt;li&gt;having plugins that make Vim behave like users would expect from a modern text editor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my experience as a TA and fellow student, learning the former requires the latter and vice versa, leading to a vicious cycle of Vim peril. With this in mind, this talk aims to cure the latter, so that the vicious cycle can end.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jez/vim-as-an-ide&quot;&gt;Workshop (GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of my favorite parts of this talk is that it uses commits and the GitHub interface to show participants the diff of exactly what changed alongside a description of how to complete the step.&lt;/p&gt;</content><author><name>Jake Zimmerman</name></author><summary type="html">Vim as an IDE is an interactive workshop-style tech talk that I first gave at Carnegie Mellon University as a part of the Computer Club Talk Series. Its central motivation is this: students who have been instructed or told to use Vim to complete programming assignments while ssh’ed are missing out on the vast power that lies within Vim.</summary></entry><entry><title type="html">Frontend JavaScript Primer</title><link href="http://localhost:4000/talks/frontend-javascript-primer/" rel="alternate" type="text/html" title="Frontend JavaScript Primer" /><published>2014-09-04T00:00:00-04:00</published><updated>2014-09-04T00:00:00-04:00</updated><id>http://localhost:4000/talks/frontend-javascript-primer</id><content type="html" xml:base="http://localhost:4000/talks/frontend-javascript-primer/">&lt;p&gt;This interactive, workshop-style tech talk I first gave as a part of an event called Web Dev Weeks (later: Web Dev Weekend). Web Dev Weeks was designed to give students at Carnegie Mellon an introduction to aspects of web development like frontend and backend development, interface and interaction design, and automated site deployment.&lt;/p&gt;
&lt;p&gt;Fitting in with that theme, the Frontend JavaScript Primer talk taught students how to write JavaScript using jQuery by building an interactive, tile-based game.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://scottylabs.org/wdw/frontend/lab/&quot;&gt;Workshop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://scottylabs.org/wdw/frontend/demo/&quot;&gt;Finished Lab Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of my favorite parts of this talk is that it uses commits and the GitHub interface to show participants the diff of exactly what changed alongside a description of how to complete the step.&lt;/p&gt;</content><author><name>Jake Zimmerman</name></author><summary type="html">This interactive, workshop-style tech talk I first gave as a part of an event called Web Dev Weeks (later: Web Dev Weekend). Web Dev Weeks was designed to give students at Carnegie Mellon an introduction to aspects of web development like frontend and backend development, interface and interaction design, and automated site deployment.</summary></entry></feed>
